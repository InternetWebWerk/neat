@if $border-box-sizing == true {
  * {
    @include box-sizing(border-box);
  }
}

$fg-column: $column;
$fg-gutter: $gutter;
$fg-max-columns: $grid-columns;
$fg-max-width: $max-width;

// outer wrapper center container
@mixin outer-container() {
  @include clearfix;
  max-width: $fg-max-width;
  text-align: left;
  margin: {
    left: auto;
    right: auto;
  }

  @if $border-box-sizing == true {
    max-width: $fg-max-width + ($fg-gutter*2);
    padding: {
      left: $fg-gutter;
      right: $fg-gutter;
    }
  }

  @else {
    padding: {
      left: $fg-gutter;
      right: $fg-gutter;
    }
  }
}

// Grid span columns
@mixin span-columns(
  $columns,
  $container-columns: $fg-max-columns, 
  $display: block,
  $from: left,
  $end: false
) {

  @if $display == table {
    display: table-cell;
    padding-right: flex-gutter($container-columns);
    width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);

    &:last-child {
      padding-right: 0;
    }

    @if $end == true {
      padding-right: 0;
    }
  }

  @else if $display == inline-block {
    @include inline-block;
    margin-right: flex-gutter($container-columns);
    width: flex-grid($columns, $container-columns);

    &:last-child {
      margin-right: 0;
    }

    @if $end == true {
      margin-right: 0;
    }
  }

  @else {
    display: block;
    float: $from;
    margin-right: flex-gutter($container-columns);
    width: flex-grid($columns, $container-columns);

    &:last-child {
      margin-right: 0;
    }

    @if $end == true {
      margin-right: 0;
    }
  }
}

// Clearfix / row container
@mixin row($display: block) {
  @include clearfix;

  @if $display == table {
    display: table;
  }

  @else {
    display: block;
  }
}

// Shift
@mixin shift($n-columns: 1) {
  margin-left: $n-columns * flex-grid(1) + $n-columns * flex-gutter();
}


// Pad
@mixin pad($padding: flex-gutter()) {
  padding: $padding;
}

// Remove element gutter
@mixin omega($display: block, $direction: right) {
  @if $display == table {
    padding-#{$direction}: 0;
  }

  @else {
    margin-#{$direction}: 0;
  }
}

@mixin nth-omega($nth, $display: block, $direction: right) {
  @if $display == table {
    &:nth-child(#{$nth}) {
      padding-#{$direction}: 0;
    }
  }

  @else {
    &:nth-child(#{$nth}) {
      margin-#{$direction}: 0;
    }
  }
}

// Fill 100% of parent
@mixin fill-parent() {
  width: 100%;

  @if $border-box-sizing == false {
    @include box-sizing(border-box);
  }
}
